<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Apply for a Loan | Maximum Gamers</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
</head>
<body class="bg-light">

  <div class="container py-5">
    <h1 class="mb-4 text-center text-primary">üí∞ Apply for a Loan</h1>

    <!-- Loan Application Form -->
    <div class="card shadow p-4">
      <form id="loanForm" enctype="multipart/form-data">
        <div class="mb-3">
          <label class="form-label">Upload Image of Item</label>
          <input type="file" class="form-control" name="itemImage" accept="image/*" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Item Description</label>
          <textarea class="form-control" name="description" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label class="form-label">Estimated Item Value (Ksh)</label>
          <input type="number" class="form-control" name="itemValue" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Loan Amount Requested (Ksh)</label>
          <input type="number" class="form-control" name="loanAmount" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Loan Duration (Months)</label>
          <input type="number" class="form-control" name="loanPeriod" required>
        </div>
        <button type="submit" class="btn btn-success w-100">Submit Loan Application</button>
      </form>
    </div>

    <!-- Status Messages -->
    <div id="loanStatus" class="mt-3"></div>

    <!-- User Loan Status Updates -->
    <div class="mt-5">
      <h3 class="text-primary">üìã Your Loan Applications</h3>
      <table class="table table-bordered table-striped mt-3">
        <thead>
          <tr>
            <th>Item</th>
            <th>Description</th>
            <th>Value</th>
            <th>Requested</th>
            <th>Months</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="loanList">
          <tr><td colspan="6" class="text-center">No loans yet</td></tr>
        </tbody>
      </table>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const loanForm = document.getElementById("loanForm");
  const loanStatus = document.getElementById("loanStatus");
  const loanList = document.getElementById("loanList");

  // Replace this with the actual logged-in user's ID and role
  const currentUserId = "{{USER_ID}}"; // pass from backend template
  const currentUserRole = "user";      // or "admin"

  // Initialize socket with user info
  socket.emit("init", { userId: currentUserId, role: currentUserRole });

  // Submit loan application
  loanForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const formData = new FormData(loanForm);

    fetch("/loans", { method: "POST", body: formData, headers: { Accept: "application/json" } })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          loanStatus.innerHTML = `<div class="alert alert-success">‚úÖ Loan submitted successfully!</div>`;
          loanForm.reset();
          // Notify server via socket
          socket.emit("newLoan", { ...data.loan, user: currentUserId });
        } else {
          loanStatus.innerHTML = `<div class="alert alert-danger">‚ùå ${data.message || "Failed to submit loan. Try again."}</div>`;
        }
      })
      .catch(() => {
        loanStatus.innerHTML = `<div class="alert alert-danger">‚ùå Failed to submit loan. Try again.</div>`;
      });
  });

  // Listen for loan updates (both new loans & status updates)
  socket.on("loansList", (loans) => renderLoans(loans));
  socket.on("loanUpdated", (loan) => {
    // Update only the loan that changed
    const rows = loanList.querySelectorAll("tr");
    let updated = false;
    rows.forEach(row => {
      if (row.dataset.id === loan._id) {
        row.innerHTML = renderLoanRow(loan);
        updated = true;
      }
    });
    if (!updated) {
      // If loan not in table yet, re-render all
      fetch("/loans/list").then(res => res.json()).then(data => renderLoans(data));
    }
  });

  // Render loans table
  function renderLoans(loans) {
    if (!loans || !loans.length) {
      loanList.innerHTML = `<tr><td colspan="6" class="text-center">No loans yet</td></tr>`;
      return;
    }
    loanList.innerHTML = loans.map(loan => `<tr data-id="${loan._id}">${renderLoanRow(loan)}</tr>`).join("");
  }

  function renderLoanRow(loan) {
    return `
      <td><img src="/uploads/${loan.itemImage}" width="60"></td>
      <td>${loan.description}</td>
      <td>Ksh ${loan.itemValue}</td>
      <td>Ksh ${loan.loanAmount}</td>
      <td>${loan.loanPeriod}</td>
      <td>
        <span class="badge ${loan.status === 'Approved' ? 'bg-success' : loan.status === 'Rejected' ? 'bg-danger' : 'bg-warning'}">
          ${loan.status}
        </span>
      </td>
    `;
  }

  // Request initial loans via fetch
  fetch("/loans/list")
    .then(res => res.json())
    .then(data => renderLoans(data))
    .catch(() => console.log("Failed to load loans"));
</script>

</body>
</html>
